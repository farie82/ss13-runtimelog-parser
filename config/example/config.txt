# Regex used to match the start of the runtime (example is based of paradise stations log)
RUNTIME_RE \[20[0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\]\sRuntime in (.*?):.*
# Regex used to match the proc name of the runtime (example is based of paradise stations log)
PROC_NAME_RE \[20[0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\]   proc name: .*? \((.*?)\)

# Censoring regex strings. Not easily changeable. Group size is set
# TODO: Make regex groups variable
FIND_PREF_WARNING_CKEY_RE (ckey \').*(\')
FIND_USR_CKEY_RE (usr: .*\()[\w *]*(\))
FIND_PARAM_CKEY_RE ( *)[\w *]*( \(\/client\))
FIND_REF_BASED_CKEY_RE (Got \\ref-based src in topic from )\w*( for .* \()\w*(\))

# Path to the repo
REPO_PATH owner/RepoName

# The name of the account that creates the issues. Will be used to find issues. Vital to be the same as the one the token belongs to
BOT_NAME issue_maker_name

# Token used to authenticate to github
TOKEN TOKEN_HERE

# Lables that the issues will get and the script will use to search existing ones. Use ',' to add multiple
ISSUE_LABELS Runtime,OtherLabel

# The text of the comment placed when the script reopens an issue. After this text the new found stacktrace will be placed. \n will turn into newlines
REOPEN_COMMENT_BASE Reopened issue due to new occurence.\n